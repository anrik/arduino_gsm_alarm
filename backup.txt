#include <String.h>
#include <GSM.h>

#define PINNUMBER ""
#define PHONENUMBER "0038641455792"
#define ALARM_MSG "ALARM"

#define MAX_ALARMS 4

#define KOMORA1_PIN A0
#define KOMORA2_PIN A1
#define KOMORA3_PIN A2
#define KOMORA4_PIN A3

#define ALARM_LED_KOMORA1_PIN 8
#define ALARM_LED_KOMORA2_PIN 9
#define ALARM_LED_KOMORA3_PIN 10
#define ALARM_LED_KOMORA4_PIN 11

#define READY_LED_PIN A5

#define RESET_BTN_PIN 12

//LOW = ALARM ON CURCUIT CLOSED
//HIGH = AlARM ON CURCUIT OPEND
#define ALARM_ON LOW

GSM g_gsmModule;
GSM_SMS g_sms;
unsigned char g_GSMConnected;

unsigned char g_alarmState; //up to 8 allarms (every bit)
unsigned char g_alarmStateSended; //up to 8 allarms (every bit)
unsigned int g_komoraPins[MAX_ALARMS];
unsigned int g_komoraAlarmLedPins[MAX_ALARMS];



unsigned char readButtonWithDelay(int pin);
void clearAllAlarms();
void setAlarm(unsigned char komoraID);
unsigned char checkAlarm();

void setup()
{
  Serial.begin(9600);
  Serial.println("SMS Messages Sender");
  
  g_alarmState=0x00;
  
  g_komoraPins[0]=KOMORA1_PIN;
  g_komoraPins[1]=KOMORA2_PIN;
  g_komoraPins[2]=KOMORA3_PIN;
  g_komoraPins[3]=KOMORA4_PIN;
  
  g_komoraAlarmLedPins[0]=ALARM_LED_KOMORA1_PIN;
  g_komoraAlarmLedPins[1]=ALARM_LED_KOMORA2_PIN;
  g_komoraAlarmLedPins[2]=ALARM_LED_KOMORA3_PIN;
  g_komoraAlarmLedPins[3]=ALARM_LED_KOMORA4_PIN;
  
  for(int i=0; i<MAX_ALARMS; i++)
  {
    //set input for alarm switch
    pinMode(g_komoraPins[i],INPUT);
    digitalWrite(g_komoraPins[i], HIGH);
    
    //setoutputs for led
    pinMode(g_komoraAlarmLedPins[i],OUTPUT);
    digitalWrite(g_komoraAlarmLedPins[i],LOW);
  }
  
  pinMode(READY_LED_PIN, OUTPUT);
  
  pinMode(RESET_BTN_PIN, INPUT_PULLUP);
  
  
  g_GSMConnected=0;
}

void clearAllAlarms(){
  g_alarmState=0x00;
  g_alarmStateSended=0x00;
}

unsigned char sendMessage(unsigned char komoraID)
{
  if(g_GSMConnected){
    if(g_sms.ready()==0){
      delay(2000);
      return 0;
    }
    
    Serial.println("Sending sms");
    Serial.print("ready=");
    Serial.println(g_sms.ready());
    g_sms.beginSMS(PHONENUMBER);
    String komoraStr = String(komoraID+1,DEC);
    String msg = String(ALARM_MSG + komoraStr);
    g_sms.print(msg);
    g_sms.endSMS(); 
    
    Serial.println("sms send");
    Serial.print("ready=");
    Serial.println(g_sms.ready());
    if(g_sms.ready()==1){
      g_alarmStateSended = g_alarmStateSended | (0x01<<komoraID);
      return 1;
    }
    return 0;
  }
}

void setAlarm(unsigned char komoraID)
{
  if(!(g_alarmState & (0x01<<komoraID))){
    g_alarmState=g_alarmState | (0x01<<komoraID);
    sendMessage(komoraID);
  }
}

unsigned char checkReset(){
  if(readButtonWithDelay(RESET_BTN_PIN))
    clearAllAlarms();
}

unsigned char checkAlarm()
{
  for(int i=0; i<MAX_ALARMS; i++){
    if(readAlarmWithDelay(g_komoraPins[i])){
      setAlarm(i);
    }  
  }
}

unsigned char readAlarmWithDelay(int pin)
{
  int state=0;
  state=digitalRead(pin);
  
  if(state==ALARM_ON){
    delay(100);
    state=digitalRead(pin);
    if(state==ALARM_ON)
      return 1;
  }
  return 0;
}

unsigned char readButtonWithDelay(int pin)
{
  int state=0;
  state=digitalRead(pin);
  
  if(state==LOW){
    delay(100);
    state=digitalRead(pin);
    if(state==LOW)
      return 1;
  }
  return 0;
}

void setAlarmLed(){
   for(int i=0; i<MAX_ALARMS; i++){
    if((g_alarmState & (0x01<<i)))
      digitalWrite(g_komoraAlarmLedPins[i], HIGH);
    else
      digitalWrite(g_komoraAlarmLedPins[i], LOW);
   }
}

void checkUnsendAlarms(){
  if(g_alarmState==g_alarmStateSended || !g_GSMConnected)
    return;
  
  int retry=10;
   for(int i=0; i<MAX_ALARMS; i++){
     if((g_alarmState & (0x01<<i)) && !(g_alarmStateSended & (0x01<<i))){
       Serial.print("Send again");
       Serial.println(i);
       if(!sendMessage(i)){
         if(retry>0){
           retry--;
           i--;
         }else{
           g_GSMConnected=0;
         }
       }
     }
   }
}

void loop()
{
  if(!g_GSMConnected){
    digitalWrite(READY_LED_PIN, LOW);
    Serial.println("Trying to connect");
    if(g_gsmModule.begin(PINNUMBER)==GSM_READY){
        g_GSMConnected=1;
        Serial.println("Connected");
    }

    digitalWrite(READY_LED_PIN, HIGH);
  }
  
  checkAlarm();
  
  setAlarmLed();    
 
  checkReset();
  
  checkUnsendAlarms();
  
  //if(g_GSMConnected)
  //delay(2000);  
  
}